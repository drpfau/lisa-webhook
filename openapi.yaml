openapi: 3.0.1
info:
  title: LISA Webhook
  description: 'LISA Webhook for Events and States'
  contact:
    email: info@pfau.de
  version: 2.0.0
servers:
- url: '{protocol}://{host}:{port}/'
  variables:
    protocol:
      enum:
        - http
        - https
      default: http
    host:
      default: lisaapi.leitstellensoftware.de
    port:
      default: '16123'
paths:
  /events:
    post:
      summary: Add an Event or State to LISA (JSON)
      requestBody:
        description: Add an Event or State to LISA
        content:
          application/json:
            schema:
              oneOf:
              -  $ref: '#/components/schemas/Events'
              -  $ref: '#/components/schemas/States'
        required: true
      responses:
        202:
          description: accepted
          content: {}
        403:
          description: Invalid input
          content: {}
  /ev/event/{ObjectNumber}/{event}:
    post:
      summary: Post a simple event to a specific Object, identified by an ObjectNumber
      parameters:
        - name: ObjectNumber
          in: path
          required: true
          schema:
            type: string
          description: Object Identifier in LISA  
        - name: event  
          in: path
          required: true
          schema:
            type: string
          description: LISA-Event  
      requestBody:
        description: Free text
        content:
          text/plain:
            schema: 
              $ref: '#/components/schemas/Simple'
      responses:
        202:
          description: accepted
          content: {}
        403:
          description: Invalid input
          content: {}  
  /ev/oevent/{oid}/{event}:
    post:
      summary: Post a simple event to a specific Object, identified by an OID
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
          description: Technical (internal) ObjectID in LISA
        - name: event  
          in: path
          required: true
          schema:
            type: string
          description: LISA-Event  
      requestBody:
        description: Free text
        content:
          text/plain:
            schema: 
              $ref: '#/components/schemas/Simple'
      responses:
        202:
          description: accepted
          content: {}
        403:
          description: Invalid input
          content: {}
  /ev/device/{id}/{event}:
    post:
      summary: Post a simple event to a specific device
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of a device
        - name: event  
          in: path
          required: true
          schema:
            type: string
          description: LISA-Event  
      requestBody:
        description: Free text
        content:
          text/plain:
            schema: 
              $ref: '#/components/schemas/Simple'
      responses:
        202:
          description: accepted
          content: {}
        403:
          description: Invalid input
          content: {}             
components:
  schemas:
    Simple:
      type: string
      description: Message Body for Simple Event
      example: Burglary Alert Backkdoor
    Events:
      type: object
      properties:
        TYPE:
          type: string
          enum: [EVENT]
          example: EVENT
        MID:
          type: string
          format: guid
          example: b9682433-79bc-4b9b-a333-e149e6d071f2
          description: Create a new GUID for every new Message
        CREATED:
          type: string
          format: date-time
          example: 2018-03-01T10:27:45.000Z
        ID:
          type: string
          example: 4711
          description: Device ID
        EVENT:
          type: string
          example: Burglary
        TEXT:
          type: string
          example: Burglary Sensor Backdoor 2b
        URL:
          type: string
          format: uri
          example: http://videosystem.example.com/?video=sGhnZ6gG
        GEOTIME:   
          type: string
          format: date-time
          example: 2018-03-01T10:27:45.000Z
        GEOPOSLAT:
          type: number
          example: 47.78013
        GEOPOSLONG:
          type: number
          example: 9.19910
        additionalData:
          type: object
          description: Object for additional data
    States:
      required:
      - name
      - photoUrls
      type: object
      properties:
        TYPE:
          type: string
          enum: [LINESTATE]
          example: LINESTATE
        MID:
          type: string
          format: guid
          example: b9682433-79bc-4b9b-a333-e149e6d071f3
          description: Create a new GUID for every new Message
        CREATED:
          type: string
          format: date-time
          example: 2018-03-01T10:27:45.000Z
        ID:
          type: string
          example: 4712
          description: Device ID
        MODULE:
          type: integer
          example: 0
        LINE: 
          type: integer
          example: 3
        STATE:
          type: integer
          enum: [0,1]
          description: 0 default, 1 active
          example: 1
        TEXT:
          type: string
          example: Burglary Sensor Backdoor 2b
        URL:
          type: string
          format: uri
          example: http://videosystem.example.com/?video=sGhnZ6gG  
        GEOTIME:   
          type: string
          format: date-time
          example: 2018-03-01T10:27:45.000Z
        GEOPOSLAT:
          type: number
          example: 47.78013
        GEOPOSLONG:
          type: number
          example: 9.19910
        additionalData:
          type: object
          description: Object for additional data          
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic
security:
  - basicAuth: []  